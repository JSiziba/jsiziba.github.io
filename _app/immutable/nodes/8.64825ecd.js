import{s as Ds,a as i,f as e,l as p,F as Ss,d as u,c as a,g as n,h,u as r,m as f,j as c,i as Os,v as t,B as qs}from"../chunks/scheduler.d8ec4c9c.js";import{S as Us,i as zs,b as C,d as b,m as $,a as _,t as y,e as E}from"../chunks/index.f60eb3ad.js";import"../chunks/ProgressBar.svelte_svelte_type_style_lang.7c14f914.js";import{C as w}from"../chunks/CodeBlock.3792ad78.js";function Ms(Bs){let xt,x,O,Un="Mastering Flags and Bitwise Operations in Programming",re,vt,zn='<h2 class="h2">What are Flags?</h2> <p class="mt-2">Flags are boolean variables used to represent a condition. In programming, they are often manipulated using bitwise operations for efficient storage and access.</p>',oe,d,B,Mn="Bitwise Operations on Flags",ce,D,jn="Setting a Flag",ue,L,Ct,Vn="Purpose: Turn on a specific bit (flag).",he,bt,Kn="Operator: Bitwise OR (|).",pe,$t,fe,H,_t,me,S,de,yt,ge,q,xe,U,Gn="Clearing a Flag",ve,I,Et,Jn="Purpose: Turn off a specific bit (flag).",Ce,wt,Qn="Operator: Bitwise AND (&) with NOT (~).",be,Lt,$e,z,_e,M,Xn="Checking a Flag",ye,k,It,Yn="Purpose: Determine if a specific bit (flag) is on.",Ee,kt,Zn="Operator: Bitwise AND (&).",we,Tt,Le,j,Ie,m,V,ts="Logical Operations on Flags",ke,Pt,es="Logical operations are used for making decisions based on one or more conditions.",Te,K,ns="AND (&&)",Pe,W,Rt,ss="Purpose: Check if both conditions are true.",Re,Nt,Ne,G,He,J,ls="OR (||)",We,A,Ht,is="Purpose: Check if at least one condition is true.",Ae,Wt,Fe,Q,Oe,X,as="NOT (!)",Be,F,At,rs="Purpose: Inverts the truth value.",De,Ft,Se,Y,qe,s,Z,os="Using Flags in Enums",Ue,Ot,cs="Enums in TypeScript can be used to organize flags more effectively.",ze,tt,us="Understanding Bitwise Flags in Enums",Me,Bt,hs="When using enums for flags, each flag should represent a unique bit position in a binary number. This is why we use powers of two. Each power of two corresponds to a single binary digit being set to 1, starting from the rightmost bit.",je,et,ps="<li>1 in binary: 0001</li> <li>2 in binary: 0010</li> <li>4 in binary: 0100</li> <li>8 in binary: 1000</li>",Ve,Dt,fs="This approach ensures that each flag is mutually exclusive, having only one bit set in their binary representation. When you combine them using bitwise operations, you can create a unique combination of these flags without any ambiguity.",Ke,nt,ms="Defining Flagged Enums",Ge,st,ds="Approach 1: Direct Numeric Values",Je,St,gs="This is the straightforward approach where each enum member is assigned a direct numeric value that represents a power of two.",Qe,qt,xs="Example:",Xe,lt,Ye,Ut,vs="Key Points:",Ze,it,Cs="<li>Simplicity: Direct and easy to understand. Each value clearly represents the corresponding bit position.</li> <li>Visual: The numeric values (1, 2, 4, etc.) directly correspond to their binary representations (0001, 0010, 0100, etc.).</li> <li>Common Usage: This method is commonly used and easily recognized by many developers.</li>",tn,at,bs="Approach 2: Bitwise Shift Operations",en,rt,nn,$s="(<<)",sn,ln,an,zt,_s="Example:",rn,ot,on,Mt,ys="Key Points:",cn,T,R,un,Es="<<",hn,pn,ws="<<",fn,mn,dn,N,gn,Ls="<<",xn,vn,Is="<<",Cn,bn,$n,jt,ks="Educational Value: Demonstrates the underlying bit manipulation more explicitly, which is helpful for those learning or reviewing bitwise operations.",_n,ct,Ts="Combining Flags",yn,Vt,Ps="Regardless of the approach, combining flags using bitwise OR (|) works the same way. It combines different permissions. For example you can combine these flags for a user with multiple access levels.",En,ut,wn,ht,Rs="Checking Flags",Ln,Kt,Ns="Checking if a flag is set also remains consistent in both approaches, utilizing the bitwise AND (&):",In,pt,kn,ft,Hs="Clearing Flags:",Tn,Gt,Ws="To remove an access level, use the bitwise AND (&) with NOT (~).",Pn,mt,Rn,dt,As="Why Powers of Two:",Nn,gt,Fs="<li>Each flag occupies a unique place in the binary representation, ensuring no overlap. For instance, Read (1) and Write (2) combined make 3 (11 in binary), a distinct combination that accurately represents having both permissions.</li> <li>This method is highly efficient for storing and checking multiple boolean conditions in a single number.</li>",ee;return S=new w({props:{lineNumbers:!0,class:"",language:"typescript",code:`const READ = 1;  // 001 in binary
const WRITE = 2; // 010 in binary`}}),q=new w({props:{lineNumbers:!0,class:"",language:"typescript",code:`let permissions = 0; // Starting with no permissions
permissions |= READ; // Now permissions is 1 (001 in binary)
`}}),z=new w({props:{lineNumbers:!0,class:"",language:"typescript",code:`permissions |= WRITE; // Setting WRITE, permissions is now 3 (011 in binary)
permissions &= ~WRITE; // Clearing WRITE, permissions is back to 1 (001 in binary)
`}}),j=new w({props:{lineNumbers:!0,language:"typescript",code:`if (permissions & READ) {
  console.log('Read permission is set.');
}`}}),G=new w({props:{lineNumbers:!0,language:"typescript",code:`if ((permissions & READ) && (permissions & WRITE)) {
  console.log('Both Read and Write permissions are set.');
}`}}),Q=new w({props:{lineNumbers:!0,language:"typescript",code:`if ((permissions & READ) || (permissions & WRITE)) {
  console.log('Either Read or Write (or both) permission is set.');
}`}}),Y=new w({props:{lineNumbers:!0,language:"typescript",code:`if (!(permissions & WRITE)) {
  console.log('Write permission is not set.');
}`}}),lt=new w({props:{lineNumbers:!0,language:"typescript",code:`enum AccessLevel {
  None = 0,
  Read = 1,     // Binary: 0001
  Write = 2,    // Binary: 0010
  Execute = 4,  // Binary: 0100
  Full = Read | Write | Execute // 7, Binary: 0111
}`}}),ot=new w({props:{lineNumbers:!0,language:"typescript",code:`enum AccessLevel {
  None = 0,
  Read = 1 << 0,   // Equivalent to 1
  Write = 1 << 1,  // Equivalent to 2
  Execute = 1 << 2,// Equivalent to 4
  Full = Read | Write | Execute // Still 7
}
`}}),ut=new w({props:{lineNumbers:!0,language:"typescript",code:`let userAccess = AccessLevel.Read | AccessLevel.Write; // Combines Read and Write
`}}),pt=new w({props:{lineNumbers:!0,language:"typescript",code:`if (userAccess & AccessLevel.Write) {
  console.log('User has write access.');
}
`}}),mt=new w({props:{lineNumbers:!0,language:"typescript",code:`userAccess &= ~AccessLevel.Write;
// User access is now 1 in binary: 0001 (only Read access)`}}),{c(){xt=i(),x=e("article"),O=e("h1"),O.textContent=Un,re=i(),vt=e("section"),vt.innerHTML=zn,oe=i(),d=e("section"),B=e("h2"),B.textContent=Mn,ce=i(),D=e("h3"),D.textContent=jn,ue=i(),L=e("ul"),Ct=e("li"),Ct.textContent=Vn,he=i(),bt=e("li"),bt.textContent=Kn,pe=i(),$t=e("li"),fe=p(`Example:\r
          `),H=e("ul"),_t=e("li"),me=p(`Define flags:\r
              `),C(S.$$.fragment),de=i(),yt=e("li"),ge=p(`Set a flag:\r
              `),C(q.$$.fragment),xe=i(),U=e("h3"),U.textContent=Gn,ve=i(),I=e("ul"),Et=e("li"),Et.textContent=Jn,Ce=i(),wt=e("li"),wt.textContent=Qn,be=i(),Lt=e("li"),$e=p(`Example\r
        `),C(z.$$.fragment),_e=i(),M=e("h3"),M.textContent=Xn,ye=i(),k=e("ul"),It=e("li"),It.textContent=Yn,Ee=i(),kt=e("li"),kt.textContent=Zn,we=i(),Tt=e("li"),Le=p(`Example\r
        `),C(j.$$.fragment),Ie=i(),m=e("section"),V=e("h2"),V.textContent=ts,ke=i(),Pt=e("p"),Pt.textContent=es,Te=i(),K=e("h3"),K.textContent=ns,Pe=i(),W=e("ul"),Rt=e("li"),Rt.textContent=ss,Re=i(),Nt=e("li"),Ne=p(`Example\r
        `),C(G.$$.fragment),He=i(),J=e("h3"),J.textContent=ls,We=i(),A=e("ul"),Ht=e("li"),Ht.textContent=is,Ae=i(),Wt=e("li"),Fe=p(`Example\r
        `),C(Q.$$.fragment),Oe=i(),X=e("h3"),X.textContent=as,Be=i(),F=e("ul"),At=e("li"),At.textContent=rs,De=i(),Ft=e("li"),Se=p(`Example\r
        `),C(Y.$$.fragment),qe=i(),s=e("section"),Z=e("h2"),Z.textContent=os,Ue=i(),Ot=e("p"),Ot.textContent=cs,ze=i(),tt=e("h3"),tt.textContent=us,Me=i(),Bt=e("p"),Bt.textContent=hs,je=i(),et=e("ul"),et.innerHTML=ps,Ve=i(),Dt=e("p"),Dt.textContent=fs,Ke=i(),nt=e("h3"),nt.textContent=ms,Ge=i(),st=e("h4"),st.textContent=ds,Je=i(),St=e("p"),St.textContent=gs,Qe=i(),qt=e("p"),qt.textContent=xs,Xe=i(),C(lt.$$.fragment),Ye=i(),Ut=e("p"),Ut.textContent=vs,Ze=i(),it=e("ul"),it.innerHTML=Cs,tn=i(),at=e("h4"),at.textContent=bs,en=i(),rt=e("p"),nn=p("In this approach, bitwise shift operations "),sn=p($s),ln=p(" are used to set the flag values."),an=i(),zt=e("p"),zt.textContent=_s,rn=i(),C(ot.$$.fragment),on=i(),Mt=e("p"),Mt.textContent=ys,cn=i(),T=e("ul"),R=e("li"),un=p("Clarity on Bit Position: The shift operation ( "),hn=p(Es),pn=p(" ) makes it visually clear which bit position each flag represents. 1 "),fn=p(ws),mn=p(" 1 is easier to visualize as shifting the bit 1 position to the left, resulting in 2."),dn=i(),N=e("li"),gn=p("Consistency and Scalability: Particularly useful in enums with many members. Itâ€™s easier to keep track of bit positions (1 "),xn=p(Ls),vn=p(" 3, 1 "),Cn=p(Is),bn=p(" 4, etc.) rather than the corresponding decimal numbers (8, 16, etc.)."),$n=i(),jt=e("li"),jt.textContent=ks,_n=i(),ct=e("h3"),ct.textContent=Ts,yn=i(),Vt=e("p"),Vt.textContent=Ps,En=i(),C(ut.$$.fragment),wn=i(),ht=e("h3"),ht.textContent=Rs,Ln=i(),Kt=e("p"),Kt.textContent=Ns,In=i(),C(pt.$$.fragment),kn=i(),ft=e("h3"),ft.textContent=Hs,Tn=i(),Gt=e("p"),Gt.textContent=Ws,Pn=i(),C(mt.$$.fragment),Rn=i(),dt=e("h3"),dt.textContent=As,Nn=i(),gt=e("ul"),gt.innerHTML=Fs,this.h()},l(o){Ss("svelte-dve2z8",document.head).forEach(u),xt=a(o),x=n(o,"ARTICLE",{class:!0});var P=h(x);O=n(P,"H1",{class:!0,"data-svelte-h":!0}),r(O)!=="svelte-1i5qfql"&&(O.textContent=Un),re=a(P),vt=n(P,"SECTION",{"data-svelte-h":!0}),r(vt)!=="svelte-1n23uu9"&&(vt.innerHTML=zn),oe=a(P),d=n(P,"SECTION",{class:!0});var v=h(d);B=n(v,"H2",{class:!0,"data-svelte-h":!0}),r(B)!=="svelte-1e44avo"&&(B.textContent=Mn),ce=a(v),D=n(v,"H3",{class:!0,"data-svelte-h":!0}),r(D)!=="svelte-15odqqf"&&(D.textContent=jn),ue=a(v),L=n(v,"UL",{class:!0});var Jt=h(L);Ct=n(Jt,"LI",{"data-svelte-h":!0}),r(Ct)!=="svelte-1cmnm3v"&&(Ct.textContent=Vn),he=a(Jt),bt=n(Jt,"LI",{"data-svelte-h":!0}),r(bt)!=="svelte-zem991"&&(bt.textContent=Kn),pe=a(Jt),$t=n(Jt,"LI",{});var Wn=h($t);fe=f(Wn,`Example:\r
          `),H=n(Wn,"UL",{class:!0});var ne=h(H);_t=n(ne,"LI",{});var An=h(_t);me=f(An,`Define flags:\r
              `),b(S.$$.fragment,An),An.forEach(u),de=a(ne),yt=n(ne,"LI",{});var Fn=h(yt);ge=f(Fn,`Set a flag:\r
              `),b(q.$$.fragment,Fn),Fn.forEach(u),ne.forEach(u),Wn.forEach(u),Jt.forEach(u),xe=a(v),U=n(v,"H3",{class:!0,"data-svelte-h":!0}),r(U)!=="svelte-zz8p76"&&(U.textContent=Gn),ve=a(v),I=n(v,"UL",{class:!0});var Qt=h(I);Et=n(Qt,"LI",{"data-svelte-h":!0}),r(Et)!=="svelte-1xx9k8d"&&(Et.textContent=Jn),Ce=a(Qt),wt=n(Qt,"LI",{"data-svelte-h":!0}),r(wt)!=="svelte-4ta2wf"&&(wt.textContent=Qn),be=a(Qt),Lt=n(Qt,"LI",{});var On=h(Lt);$e=f(On,`Example\r
        `),b(z.$$.fragment,On),On.forEach(u),Qt.forEach(u),_e=a(v),M=n(v,"H3",{class:!0,"data-svelte-h":!0}),r(M)!=="svelte-q6xw1b"&&(M.textContent=Xn),ye=a(v),k=n(v,"UL",{class:!0});var Xt=h(k);It=n(Xt,"LI",{"data-svelte-h":!0}),r(It)!=="svelte-bke8sc"&&(It.textContent=Yn),Ee=a(Xt),kt=n(Xt,"LI",{"data-svelte-h":!0}),r(kt)!=="svelte-7kk9px"&&(kt.textContent=Zn),we=a(Xt),Tt=n(Xt,"LI",{});var Bn=h(Tt);Le=f(Bn,`Example\r
        `),b(j.$$.fragment,Bn),Bn.forEach(u),Xt.forEach(u),v.forEach(u),Ie=a(P),m=n(P,"SECTION",{class:!0});var g=h(m);V=n(g,"H2",{class:!0,"data-svelte-h":!0}),r(V)!=="svelte-1ao6kvc"&&(V.textContent=ts),ke=a(g),Pt=n(g,"P",{"data-svelte-h":!0}),r(Pt)!=="svelte-1f5yem5"&&(Pt.textContent=es),Te=a(g),K=n(g,"H3",{class:!0,"data-svelte-h":!0}),r(K)!=="svelte-6w6poi"&&(K.textContent=ns),Pe=a(g),W=n(g,"UL",{class:!0});var se=h(W);Rt=n(se,"LI",{"data-svelte-h":!0}),r(Rt)!=="svelte-1uju6m2"&&(Rt.textContent=ss),Re=a(se),Nt=n(se,"LI",{});var Dn=h(Nt);Ne=f(Dn,`Example\r
        `),b(G.$$.fragment,Dn),Dn.forEach(u),se.forEach(u),He=a(g),J=n(g,"H3",{class:!0,"data-svelte-h":!0}),r(J)!=="svelte-1bz2qdo"&&(J.textContent=ls),We=a(g),A=n(g,"UL",{class:!0});var le=h(A);Ht=n(le,"LI",{"data-svelte-h":!0}),r(Ht)!=="svelte-8b0qo8"&&(Ht.textContent=is),Ae=a(le),Wt=n(le,"LI",{});var Sn=h(Wt);Fe=f(Sn,`Example\r
        `),b(Q.$$.fragment,Sn),Sn.forEach(u),le.forEach(u),Oe=a(g),X=n(g,"H3",{class:!0,"data-svelte-h":!0}),r(X)!=="svelte-1vlah7r"&&(X.textContent=as),Be=a(g),F=n(g,"UL",{class:!0});var ie=h(F);At=n(ie,"LI",{"data-svelte-h":!0}),r(At)!=="svelte-l0bc16"&&(At.textContent=rs),De=a(ie),Ft=n(ie,"LI",{});var qn=h(Ft);Se=f(qn,`Example\r
        `),b(Y.$$.fragment,qn),qn.forEach(u),ie.forEach(u),g.forEach(u),qe=a(P),s=n(P,"SECTION",{class:!0});var l=h(s);Z=n(l,"H2",{class:!0,"data-svelte-h":!0}),r(Z)!=="svelte-r1647z"&&(Z.textContent=os),Ue=a(l),Ot=n(l,"P",{"data-svelte-h":!0}),r(Ot)!=="svelte-1mul072"&&(Ot.textContent=cs),ze=a(l),tt=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(tt)!=="svelte-dpt9tz"&&(tt.textContent=us),Me=a(l),Bt=n(l,"P",{"data-svelte-h":!0}),r(Bt)!=="svelte-16y32ff"&&(Bt.textContent=hs),je=a(l),et=n(l,"UL",{class:!0,"data-svelte-h":!0}),r(et)!=="svelte-1q1w8e1"&&(et.innerHTML=ps),Ve=a(l),Dt=n(l,"P",{"data-svelte-h":!0}),r(Dt)!=="svelte-1ldg8is"&&(Dt.textContent=fs),Ke=a(l),nt=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(nt)!=="svelte-vhwuwe"&&(nt.textContent=ms),Ge=a(l),st=n(l,"H4",{class:!0,"data-svelte-h":!0}),r(st)!=="svelte-agkvvm"&&(st.textContent=ds),Je=a(l),St=n(l,"P",{"data-svelte-h":!0}),r(St)!=="svelte-1d57my2"&&(St.textContent=gs),Qe=a(l),qt=n(l,"P",{"data-svelte-h":!0}),r(qt)!=="svelte-11lpom8"&&(qt.textContent=xs),Xe=a(l),b(lt.$$.fragment,l),Ye=a(l),Ut=n(l,"P",{"data-svelte-h":!0}),r(Ut)!=="svelte-p7p4e4"&&(Ut.textContent=vs),Ze=a(l),it=n(l,"UL",{class:!0,"data-svelte-h":!0}),r(it)!=="svelte-oxsj8y"&&(it.innerHTML=Cs),tn=a(l),at=n(l,"H4",{class:!0,"data-svelte-h":!0}),r(at)!=="svelte-1e4nkmc"&&(at.textContent=bs),en=a(l),rt=n(l,"P",{});var ae=h(rt);nn=f(ae,"In this approach, bitwise shift operations "),sn=f(ae,$s),ln=f(ae," are used to set the flag values."),ae.forEach(u),an=a(l),zt=n(l,"P",{"data-svelte-h":!0}),r(zt)!=="svelte-11lpom8"&&(zt.textContent=_s),rn=a(l),b(ot.$$.fragment,l),on=a(l),Mt=n(l,"P",{"data-svelte-h":!0}),r(Mt)!=="svelte-p7p4e4"&&(Mt.textContent=ys),cn=a(l),T=n(l,"UL",{class:!0});var Yt=h(T);R=n(Yt,"LI",{});var Zt=h(R);un=f(Zt,"Clarity on Bit Position: The shift operation ( "),hn=f(Zt,Es),pn=f(Zt," ) makes it visually clear which bit position each flag represents. 1 "),fn=f(Zt,ws),mn=f(Zt," 1 is easier to visualize as shifting the bit 1 position to the left, resulting in 2."),Zt.forEach(u),dn=a(Yt),N=n(Yt,"LI",{});var te=h(N);gn=f(te,"Consistency and Scalability: Particularly useful in enums with many members. Itâ€™s easier to keep track of bit positions (1 "),xn=f(te,Ls),vn=f(te," 3, 1 "),Cn=f(te,Is),bn=f(te," 4, etc.) rather than the corresponding decimal numbers (8, 16, etc.)."),te.forEach(u),$n=a(Yt),jt=n(Yt,"LI",{"data-svelte-h":!0}),r(jt)!=="svelte-eornpc"&&(jt.textContent=ks),Yt.forEach(u),_n=a(l),ct=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(ct)!=="svelte-1rlphhd"&&(ct.textContent=Ts),yn=a(l),Vt=n(l,"P",{"data-svelte-h":!0}),r(Vt)!=="svelte-1kgmyur"&&(Vt.textContent=Ps),En=a(l),b(ut.$$.fragment,l),wn=a(l),ht=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(ht)!=="svelte-1ui8rcr"&&(ht.textContent=Rs),Ln=a(l),Kt=n(l,"P",{"data-svelte-h":!0}),r(Kt)!=="svelte-1hrqfod"&&(Kt.textContent=Ns),In=a(l),b(pt.$$.fragment,l),kn=a(l),ft=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(ft)!=="svelte-goefky"&&(ft.textContent=Hs),Tn=a(l),Gt=n(l,"P",{"data-svelte-h":!0}),r(Gt)!=="svelte-aixyrp"&&(Gt.textContent=Ws),Pn=a(l),b(mt.$$.fragment,l),Rn=a(l),dt=n(l,"H3",{class:!0,"data-svelte-h":!0}),r(dt)!=="svelte-1hw8dsn"&&(dt.textContent=As),Nn=a(l),gt=n(l,"UL",{class:!0,"data-svelte-h":!0}),r(gt)!=="svelte-10klhdt"&&(gt.innerHTML=Fs),l.forEach(u),P.forEach(u),this.h()},h(){document.title=`Mastering Flags and Bitwise Operations in Programming\r
  `,c(O,"class","h1"),c(B,"class","h2"),c(D,"class","h3"),c(H,"class","mx-14 list-disc"),c(L,"class","mx-14 list-disc"),c(U,"class","h3"),c(I,"class","mx-14 list-disc"),c(M,"class","h3"),c(k,"class","mx-14 list-disc"),c(d,"class","flex flex-col gap-5"),c(V,"class","h2"),c(K,"class","h3"),c(W,"class","mx-14 list-disc"),c(J,"class","h3"),c(A,"class","mx-14 list-disc"),c(X,"class","h3"),c(F,"class","mx-14 list-disc"),c(m,"class","flex flex-col gap-5"),c(Z,"class","h2"),c(tt,"class","h3"),c(et,"class","mx-14 list-disc"),c(nt,"class","h3"),c(st,"class","h4"),c(it,"class","mx-14 list-disc"),c(at,"class","h4"),c(T,"class","mx-14 list-disc"),c(ct,"class","h3"),c(ht,"class","h3"),c(ft,"class","h3"),c(dt,"class","h3"),c(gt,"class","mx-14 list-disc"),c(s,"class","flex flex-col gap-5"),c(x,"class","flex gap-10 flex-col")},m(o,Hn){Os(o,xt,Hn),Os(o,x,Hn),t(x,O),t(x,re),t(x,vt),t(x,oe),t(x,d),t(d,B),t(d,ce),t(d,D),t(d,ue),t(d,L),t(L,Ct),t(L,he),t(L,bt),t(L,pe),t(L,$t),t($t,fe),t($t,H),t(H,_t),t(_t,me),$(S,_t,null),t(H,de),t(H,yt),t(yt,ge),$(q,yt,null),t(d,xe),t(d,U),t(d,ve),t(d,I),t(I,Et),t(I,Ce),t(I,wt),t(I,be),t(I,Lt),t(Lt,$e),$(z,Lt,null),t(d,_e),t(d,M),t(d,ye),t(d,k),t(k,It),t(k,Ee),t(k,kt),t(k,we),t(k,Tt),t(Tt,Le),$(j,Tt,null),t(x,Ie),t(x,m),t(m,V),t(m,ke),t(m,Pt),t(m,Te),t(m,K),t(m,Pe),t(m,W),t(W,Rt),t(W,Re),t(W,Nt),t(Nt,Ne),$(G,Nt,null),t(m,He),t(m,J),t(m,We),t(m,A),t(A,Ht),t(A,Ae),t(A,Wt),t(Wt,Fe),$(Q,Wt,null),t(m,Oe),t(m,X),t(m,Be),t(m,F),t(F,At),t(F,De),t(F,Ft),t(Ft,Se),$(Y,Ft,null),t(x,qe),t(x,s),t(s,Z),t(s,Ue),t(s,Ot),t(s,ze),t(s,tt),t(s,Me),t(s,Bt),t(s,je),t(s,et),t(s,Ve),t(s,Dt),t(s,Ke),t(s,nt),t(s,Ge),t(s,st),t(s,Je),t(s,St),t(s,Qe),t(s,qt),t(s,Xe),$(lt,s,null),t(s,Ye),t(s,Ut),t(s,Ze),t(s,it),t(s,tn),t(s,at),t(s,en),t(s,rt),t(rt,nn),t(rt,sn),t(rt,ln),t(s,an),t(s,zt),t(s,rn),$(ot,s,null),t(s,on),t(s,Mt),t(s,cn),t(s,T),t(T,R),t(R,un),t(R,hn),t(R,pn),t(R,fn),t(R,mn),t(T,dn),t(T,N),t(N,gn),t(N,xn),t(N,vn),t(N,Cn),t(N,bn),t(T,$n),t(T,jt),t(s,_n),t(s,ct),t(s,yn),t(s,Vt),t(s,En),$(ut,s,null),t(s,wn),t(s,ht),t(s,Ln),t(s,Kt),t(s,In),$(pt,s,null),t(s,kn),t(s,ft),t(s,Tn),t(s,Gt),t(s,Pn),$(mt,s,null),t(s,Rn),t(s,dt),t(s,Nn),t(s,gt),ee=!0},p:qs,i(o){ee||(_(S.$$.fragment,o),_(q.$$.fragment,o),_(z.$$.fragment,o),_(j.$$.fragment,o),_(G.$$.fragment,o),_(Q.$$.fragment,o),_(Y.$$.fragment,o),_(lt.$$.fragment,o),_(ot.$$.fragment,o),_(ut.$$.fragment,o),_(pt.$$.fragment,o),_(mt.$$.fragment,o),ee=!0)},o(o){y(S.$$.fragment,o),y(q.$$.fragment,o),y(z.$$.fragment,o),y(j.$$.fragment,o),y(G.$$.fragment,o),y(Q.$$.fragment,o),y(Y.$$.fragment,o),y(lt.$$.fragment,o),y(ot.$$.fragment,o),y(ut.$$.fragment,o),y(pt.$$.fragment,o),y(mt.$$.fragment,o),ee=!1},d(o){o&&(u(xt),u(x)),E(S),E(q),E(z),E(j),E(G),E(Q),E(Y),E(lt),E(ot),E(ut),E(pt),E(mt)}}}class Js extends Us{constructor(xt){super(),zs(this,xt,null,Ms,Ds,{})}}export{Js as component};
